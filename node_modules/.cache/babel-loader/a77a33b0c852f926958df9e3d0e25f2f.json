{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport contactsReducer from '../reducers/contacts-reducers'; // import { combineReducers } from 'redux'\n// import { contactsReducer } from '../slices/items'\n// import { filterReducer } from '../slices/filter'\n// import items from '../slices/items'\n// const rootReducer = {\n//   items,\n// }\n// const contacts = localStorage.getItem('contacts')\n// const parsedContacts = JSON.parse(contacts)\n// function initializeStorage() {\n//   if (!parsedContacts) {\n//     return []\n//   } else {\n//     return parsedContacts\n//   }\n// }\n\nexport const store = configureStore({\n  reducer: {\n    contacts: contactsReducer // filter: filterReducer,\n\n  },\n  // preloadedState: {\n  //   items: initializeStorage(),\n  // },\n  devTools: process.env.NODE_ENV !== 'production'\n}); // console.log(localStorage.getItem('contact'))","map":{"version":3,"sources":["/Users/andres/Documents/GitHub/goit-react-hw-07-phonebook/src/redux/store/store.js"],"names":["configureStore","contactsReducer","store","reducer","contacts","devTools","process","env","NODE_ENV"],"mappings":"AAAA,SAASA,cAAT,QAA+B,kBAA/B;AACA,OAAOC,eAAP,MAA4B,+BAA5B,C,CACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,KAAK,GAAGF,cAAc,CAAC;AAClCG,EAAAA,OAAO,EAAE;AACPC,IAAAA,QAAQ,EAAEH,eADH,CAEP;;AAFO,GADyB;AAKlC;AACA;AACA;AACAI,EAAAA,QAAQ,EAAEC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB;AARD,CAAD,CAA5B,C,CAWP","sourcesContent":["import { configureStore } from '@reduxjs/toolkit'\nimport contactsReducer from '../reducers/contacts-reducers'\n// import { combineReducers } from 'redux'\n// import { contactsReducer } from '../slices/items'\n// import { filterReducer } from '../slices/filter'\n// import items from '../slices/items'\n\n// const rootReducer = {\n//   items,\n// }\n// const contacts = localStorage.getItem('contacts')\n// const parsedContacts = JSON.parse(contacts)\n\n// function initializeStorage() {\n//   if (!parsedContacts) {\n//     return []\n//   } else {\n//     return parsedContacts\n//   }\n// }\n\nexport const store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n    // filter: filterReducer,\n  },\n  // preloadedState: {\n  //   items: initializeStorage(),\n  // },\n  devTools: process.env.NODE_ENV !== 'production',\n})\n\n// console.log(localStorage.getItem('contact'))\n"]},"metadata":{},"sourceType":"module"}