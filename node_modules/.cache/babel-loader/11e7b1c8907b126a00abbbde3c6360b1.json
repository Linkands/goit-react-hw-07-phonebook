{"ast":null,"code":"import _slicedToArray from\"/Users/andres/Documents/GitHub/goit-react-hw-06-phonebook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useRef,useEffect}from'react';import Phonebook from'./components/Phonebook/Phonebook';import Contacts from'./components/Contacts/Contacts';import Filter from'./components/Filter/Filter';import{v4 as uuidv4}from'uuid';import{useDispatch,useSelector}from'react-redux';import{addContact,deleteContact}from'./redux/slices/items';import{changeFilter}from'./redux/slices/filter';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var contactsItems=useSelector(function(state){return state.items;});var filterItems=useSelector(function(state){return state.filter;});var dispatch=useDispatch();var mounted=useRef(false);var _useState=useState(''),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),number=_useState4[0],setNumber=_useState4[1];useEffect(function(){if(!mounted.current){mounted.current=true;return;}localStorage.setItem('contacts',JSON.stringify(contactsItems));},[contactsItems]);var handleChange=function handleChange(e){var _e$target=e.target,name=_e$target.name,value=_e$target.value;switch(name){case'name':setName(value);break;case'number':setNumber(value);break;case'filter':dispatch(changeFilter(value));break;default:break;}};var handleSubmit=function handleSubmit(e){e.preventDefault();var randomId=uuidv4();dispatch(addContact({id:randomId,name:name,number:number}));localStorage.setItem('contacts',JSON.stringify(contactsItems));eraseInputs();};var eraseInputs=function eraseInputs(){setName('');setNumber('');};var removeContact=function removeContact(id){dispatch(deleteContact(id));};var visibleContacts=function visibleContacts(){var normalizedFilter=filterItems.toLowerCase();return contactsItems.filter(function(contact){return contact.name.toLowerCase().includes(normalizedFilter);});};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Phonebook,{onSubmit:handleSubmit,onChange:handleChange,name:name,number:number}),/*#__PURE__*/_jsx(Filter,{filter:filterItems,onChange:handleChange}),/*#__PURE__*/_jsx(Contacts,{contactsData:visibleContacts(),onDeleteContact:removeContact})]});}export default App;","map":{"version":3,"sources":["/Users/andres/Documents/GitHub/goit-react-hw-06-phonebook/src/App.jsx"],"names":["React","useState","useRef","useEffect","Phonebook","Contacts","Filter","v4","uuidv4","useDispatch","useSelector","addContact","deleteContact","changeFilter","App","contactsItems","state","items","filterItems","filter","dispatch","mounted","name","setName","number","setNumber","current","localStorage","setItem","JSON","stringify","handleChange","e","target","value","handleSubmit","preventDefault","randomId","id","eraseInputs","removeContact","visibleContacts","normalizedFilter","toLowerCase","contact","includes"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react'\nimport Phonebook from './components/Phonebook/Phonebook'\nimport Contacts from './components/Contacts/Contacts'\nimport Filter from './components/Filter/Filter'\nimport { v4 as uuidv4 } from 'uuid'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { addContact, deleteContact } from './redux/slices/items'\nimport { changeFilter } from './redux/slices/filter'\n\nfunction App() {\n  const contactsItems = useSelector((state) => state.items)\n  const filterItems = useSelector((state) => state.filter)\n  const dispatch = useDispatch()\n\n  const mounted = useRef(false)\n  const [name, setName] = useState('')\n  const [number, setNumber] = useState('')\n\n  useEffect(() => {\n    if (!mounted.current) {\n      mounted.current = true\n      return\n    }\n    localStorage.setItem('contacts', JSON.stringify(contactsItems))\n  }, [contactsItems])\n\n  const handleChange = (e) => {\n    const { name, value } = e.target\n    switch (name) {\n      case 'name':\n        setName(value)\n        break\n      case 'number':\n        setNumber(value)\n        break\n      case 'filter':\n        dispatch(changeFilter(value))\n        break\n\n      default:\n        break\n    }\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    const randomId = uuidv4()\n    dispatch(addContact({ id: randomId, name, number }))\n    localStorage.setItem('contacts', JSON.stringify(contactsItems))\n    eraseInputs()\n  }\n\n  const eraseInputs = () => {\n    setName('')\n    setNumber('')\n  }\n\n  const removeContact = (id) => {\n    dispatch(deleteContact(id))\n  }\n\n  const visibleContacts = () => {\n    const normalizedFilter = filterItems.toLowerCase()\n    return contactsItems.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    )\n  }\n\n  return (\n    <div>\n      <Phonebook\n        onSubmit={handleSubmit}\n        onChange={handleChange}\n        name={name}\n        number={number}\n      ></Phonebook>\n      <Filter filter={filterItems} onChange={handleChange}></Filter>\n      <Contacts\n        contactsData={visibleContacts()}\n        onDeleteContact={removeContact}\n      ></Contacts>\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}