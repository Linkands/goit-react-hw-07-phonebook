{"ast":null,"code":"import React from'react';import{Header,Wrapper}from'./Filter.styles';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Filter(_ref){var filter=_ref.filter,onChange=_ref.onChange;return/*#__PURE__*/_jsxs(Wrapper,{children:[/*#__PURE__*/_jsx(Header,{children:\"Find contacts by name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"filter\",onChange:onChange,value:filter,pattern:\"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",title:\"\\u0418\\u043C\\u044F \\u043C\\u043E\\u0436\\u0435\\u0442 \\u0441\\u043E\\u0441\\u0442\\u043E\\u044F\\u0442\\u044C \\u0442\\u043E\\u043B\\u044C\\u043A\\u043E \\u0438\\u0437 \\u0431\\u0443\\u043A\\u0432, \\u0430\\u043F\\u043E\\u0441\\u0442\\u0440\\u043E\\u0444\\u0430, \\u0442\\u0438\\u0440\\u0435 \\u0438 \\u043F\\u0440\\u043E\\u0431\\u0435\\u043B\\u043E\\u0432. \\u041D\\u0430\\u043F\\u0440\\u0438\\u043C\\u0435\\u0440 Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan \\u0438 \\u0442. \\u043F.\",required:true,autoComplete:\"off\"})]});}export default Filter;","map":{"version":3,"sources":["/Users/andres/Documents/GitHub/goit-react-hw-06-phonebook/src/components/Filter/Filter.jsx"],"names":["React","Header","Wrapper","Filter","filter","onChange"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,MAAT,CAAiBC,OAAjB,KAAgC,iBAAhC,C,wFAGA,QAASC,CAAAA,MAAT,MAAsC,IAApBC,CAAAA,MAAoB,MAApBA,MAAoB,CAAZC,QAAY,MAAZA,QAAY,CACpC,mBACE,MAAC,OAAD,yBACE,KAAC,MAAD,oCADF,cAEE,cACE,IAAI,CAAC,MADP,CAEE,IAAI,CAAC,QAFP,CAGE,QAAQ,CAAEA,QAHZ,CAIE,KAAK,CAAED,MAJT,CAKE,OAAO,CAAC,wHALV,CAME,KAAK,CAAC,icANR,CAOE,QAAQ,KAPV,CAQE,YAAY,CAAC,KARf,EAFF,GADF,CAeD,CAOD,cAAeD,CAAAA,MAAf","sourcesContent":["import React from 'react'\nimport { Header, Wrapper } from './Filter.styles'\nimport PropTypes from 'prop-types'\n\nfunction Filter({ filter, onChange }) {\n  return (\n    <Wrapper>\n      <Header>Find contacts by name</Header>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        onChange={onChange}\n        value={filter}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n        autoComplete=\"off\"\n      />\n    </Wrapper>\n  )\n}\n\nFilter.propTypes = {\n  filter: PropTypes.string,\n  onChange: PropTypes.func,\n}\n\nexport default Filter\n"]},"metadata":{},"sourceType":"module"}