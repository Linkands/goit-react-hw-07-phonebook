{"ast":null,"code":"import _toConsumableArray from\"/Users/andres/Documents/GitHub/goit-react-hw-06-phonebook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import{createSlice}from'@reduxjs/toolkit';var initialState={items:[]};export var contactsSlice=createSlice({name:'items',initialState:initialState.items,reducers:{addContact:function addContact(state,_ref){var payload=_ref.payload;var checkContact=state.find(function(contact){return contact.name.includes(payload.name);});if(checkContact){alert(\"\".concat(payload.name,\" is already in contacts\"));return;}return[].concat(_toConsumableArray(state),[payload]);},deleteContact:function deleteContact(state,_ref2){var payload=_ref2.payload;return state.filter(function(_ref3){var id=_ref3.id;return id!==payload;});}}});var _contactsSlice$action=contactsSlice.actions,addContact=_contactsSlice$action.addContact,deleteContact=_contactsSlice$action.deleteContact;export{addContact,deleteContact};export var contactsReducer=contactsSlice.reducer;","map":{"version":3,"sources":["/Users/andres/Documents/GitHub/goit-react-hw-06-phonebook/src/redux/slices/items.js"],"names":["createSlice","initialState","items","contactsSlice","name","reducers","addContact","state","payload","checkContact","find","contact","includes","alert","deleteContact","filter","id","actions","contactsReducer","reducer"],"mappings":"wLAAA,OAASA,WAAT,KAA4B,kBAA5B,CAEA,GAAMC,CAAAA,YAAY,CAAG,CACnBC,KAAK,CAAE,EADY,CAArB,CAIA,MAAO,IAAMC,CAAAA,aAAa,CAAGH,WAAW,CAAC,CACvCI,IAAI,CAAE,OADiC,CAEvCH,YAAY,CAAEA,YAAY,CAACC,KAFY,CAGvCG,QAAQ,CAAE,CACRC,UAAU,CAAE,oBAACC,KAAD,MAAwB,IAAdC,CAAAA,OAAc,MAAdA,OAAc,CAClC,GAAMC,CAAAA,YAAY,CAAGF,KAAK,CAACG,IAAN,CAAW,SAACC,OAAD,QAC9BA,CAAAA,OAAO,CAACP,IAAR,CAAaQ,QAAb,CAAsBJ,OAAO,CAACJ,IAA9B,CAD8B,EAAX,CAArB,CAGA,GAAIK,YAAJ,CAAkB,CAChBI,KAAK,WAAIL,OAAO,CAACJ,IAAZ,4BAAL,CACA,OACD,CACD,mCAAWG,KAAX,GAAkBC,OAAlB,GACD,CAVO,CAWRM,aAAa,CAAE,uBAACP,KAAD,WAAUC,CAAAA,OAAV,OAAUA,OAAV,OACbD,CAAAA,KAAK,CAACQ,MAAN,CAAa,mBAAGC,CAAAA,EAAH,OAAGA,EAAH,OAAYA,CAAAA,EAAE,GAAKR,OAAnB,EAAb,CADa,EAXP,CAH6B,CAAD,CAAjC,CAmBA,0BAAsCL,aAAa,CAACc,OAApD,CAAQX,UAAR,uBAAQA,UAAR,CAAoBQ,aAApB,uBAAoBA,aAApB,C,iCACP,MAAO,IAAMI,CAAAA,eAAe,CAAGf,aAAa,CAACgB,OAAtC","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nconst initialState = {\n  items: [],\n}\n\nexport const contactsSlice = createSlice({\n  name: 'items',\n  initialState: initialState.items,\n  reducers: {\n    addContact: (state, { payload }) => {\n      const checkContact = state.find((contact) =>\n        contact.name.includes(payload.name),\n      )\n      if (checkContact) {\n        alert(`${payload.name} is already in contacts`)\n        return\n      }\n      return [...state, payload]\n    },\n    deleteContact: (state, { payload }) =>\n      state.filter(({ id }) => id !== payload),\n  },\n})\n\nexport const { addContact, deleteContact } = contactsSlice.actions\nexport const contactsReducer = contactsSlice.reducer\n"]},"metadata":{},"sourceType":"module"}