{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  items: [],\n  filter: ''\n};\nexport const contactsSlice = createSlice({\n  name: 'contacts',\n  initialState,\n  reducers: {\n    addContact: (state, {\n      payload\n    }) => {\n      const checkName = state.contacts.items.map(contact => contact.name).includes(payload.name);\n      const checkNumber = state.contacts.items.map(contact => contact.number).includes(payload.number);\n\n      if (checkName) {\n        alert(`${payload.name} is already in contacts`);\n      } else if (checkNumber) {\n        alert(`Number ${payload.number} is already in contacts`);\n      } else return [...state.items, payload];\n    },\n    deleteContact: (state, {\n      payload\n    }) => state.filter.filter(({\n      id\n    }) => id !== payload),\n    changeFilter: (state, {\n      payload\n    }) => state.filter = payload\n  }\n});\nconsole.log(contactsSlice);\nexport const {\n  addContact,\n  deleteContact,\n  changeFilter\n} = contactsSlice.actions;\nexport const contactsReducer = contactsSlice.reducer;","map":{"version":3,"sources":["/Users/andres/Documents/GitHub/goit-react-hw-06-phonebook/src/redux/slices/items.js"],"names":["createSlice","initialState","items","filter","contactsSlice","name","reducers","addContact","state","payload","checkName","contacts","map","contact","includes","checkNumber","number","alert","deleteContact","id","changeFilter","console","log","actions","contactsReducer","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,MAAM,EAAE;AAFW,CAArB;AAKA,OAAO,MAAMC,aAAa,GAAGJ,WAAW,CAAC;AACvCK,EAAAA,IAAI,EAAE,UADiC;AAEvCJ,EAAAA,YAFuC;AAGvCK,EAAAA,QAAQ,EAAE;AACRC,IAAAA,UAAU,EAAE,CAACC,KAAD,EAAQ;AAAEC,MAAAA;AAAF,KAAR,KAAwB;AAClC,YAAMC,SAAS,GAAGF,KAAK,CAACG,QAAN,CAAeT,KAAf,CACfU,GADe,CACVC,OAAD,IAAaA,OAAO,CAACR,IADV,EAEfS,QAFe,CAENL,OAAO,CAACJ,IAFF,CAAlB;AAGA,YAAMU,WAAW,GAAGP,KAAK,CAACG,QAAN,CAAeT,KAAf,CACjBU,GADiB,CACZC,OAAD,IAAaA,OAAO,CAACG,MADR,EAEjBF,QAFiB,CAERL,OAAO,CAACO,MAFA,CAApB;;AAIA,UAAIN,SAAJ,EAAe;AACbO,QAAAA,KAAK,CAAE,GAAER,OAAO,CAACJ,IAAK,yBAAjB,CAAL;AACD,OAFD,MAEO,IAAIU,WAAJ,EAAiB;AACtBE,QAAAA,KAAK,CAAE,UAASR,OAAO,CAACO,MAAO,yBAA1B,CAAL;AACD,OAFM,MAEA,OAAO,CAAC,GAAGR,KAAK,CAACN,KAAV,EAAiBO,OAAjB,CAAP;AACR,KAdO;AAeRS,IAAAA,aAAa,EAAE,CAACV,KAAD,EAAQ;AAAEC,MAAAA;AAAF,KAAR,KACbD,KAAK,CAACL,MAAN,CAAaA,MAAb,CAAoB,CAAC;AAAEgB,MAAAA;AAAF,KAAD,KAAYA,EAAE,KAAKV,OAAvC,CAhBM;AAiBRW,IAAAA,YAAY,EAAE,CAACZ,KAAD,EAAQ;AAAEC,MAAAA;AAAF,KAAR,KAAyBD,KAAK,CAACL,MAAN,GAAeM;AAjB9C;AAH6B,CAAD,CAAjC;AAwBPY,OAAO,CAACC,GAAR,CAAYlB,aAAZ;AAEA,OAAO,MAAM;AAAEG,EAAAA,UAAF;AAAcW,EAAAA,aAAd;AAA6BE,EAAAA;AAA7B,IAA8ChB,aAAa,CAACmB,OAAlE;AACP,OAAO,MAAMC,eAAe,GAAGpB,aAAa,CAACqB,OAAtC","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nconst initialState = {\n  items: [],\n  filter: '',\n}\n\nexport const contactsSlice = createSlice({\n  name: 'contacts',\n  initialState,\n  reducers: {\n    addContact: (state, { payload }) => {\n      const checkName = state.contacts.items\n        .map((contact) => contact.name)\n        .includes(payload.name)\n      const checkNumber = state.contacts.items\n        .map((contact) => contact.number)\n        .includes(payload.number)\n\n      if (checkName) {\n        alert(`${payload.name} is already in contacts`)\n      } else if (checkNumber) {\n        alert(`Number ${payload.number} is already in contacts`)\n      } else return [...state.items, payload]\n    },\n    deleteContact: (state, { payload }) =>\n      state.filter.filter(({ id }) => id !== payload),\n    changeFilter: (state, { payload }) => (state.filter = payload),\n  },\n})\n\nconsole.log(contactsSlice)\n\nexport const { addContact, deleteContact, changeFilter } = contactsSlice.actions\nexport const contactsReducer = contactsSlice.reducer\n"]},"metadata":{},"sourceType":"module"}