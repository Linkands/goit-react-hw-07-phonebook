{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  items: [],\n  filter: ''\n};\nconst itemsSlice = createSlice({\n  name: 'items',\n  initialState,\n  reducers: {\n    addContact: (state, {\n      payload\n    }) => {\n      const checkName = state.items.map(contact => contact.name).includes(payload.name);\n      const checkNumber = state.items.map(contact => contact.number).includes(payload.number);\n\n      if (checkName) {\n        alert(`${payload.name} is already in contacts`);\n      } else if (checkNumber) {\n        alert(`Number ${payload.number} is already in contacts`);\n      } else [...state, payload];\n    },\n    deleteContact: (state, {\n      payload\n    }) => state.filter.filter(({\n      id\n    }) => id !== payload),\n    changeFilter: (state, {\n      payload\n    }) => state.filter = payload\n  }\n});\nexport const {\n  addContact,\n  deleteContact,\n  changeFilter\n} = itemsSlice.actions;\nexport default itemsSlice.reducer;","map":{"version":3,"sources":["/Users/andres/Documents/GitHub/goit-react-hw-06-phonebook/src/redux/slices/items.js"],"names":["createSlice","initialState","items","filter","itemsSlice","name","reducers","addContact","state","payload","checkName","map","contact","includes","checkNumber","number","alert","deleteContact","id","changeFilter","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,MAAM,EAAE;AAFW,CAArB;AAKA,MAAMC,UAAU,GAAGJ,WAAW,CAAC;AAC7BK,EAAAA,IAAI,EAAE,OADuB;AAE7BJ,EAAAA,YAF6B;AAG7BK,EAAAA,QAAQ,EAAE;AACRC,IAAAA,UAAU,EAAE,CAACC,KAAD,EAAQ;AAAEC,MAAAA;AAAF,KAAR,KAAwB;AAClC,YAAMC,SAAS,GAAGF,KAAK,CAACN,KAAN,CACfS,GADe,CACVC,OAAD,IAAaA,OAAO,CAACP,IADV,EAEfQ,QAFe,CAENJ,OAAO,CAACJ,IAFF,CAAlB;AAGA,YAAMS,WAAW,GAAGN,KAAK,CAACN,KAAN,CACjBS,GADiB,CACZC,OAAD,IAAaA,OAAO,CAACG,MADR,EAEjBF,QAFiB,CAERJ,OAAO,CAACM,MAFA,CAApB;;AAIA,UAAIL,SAAJ,EAAe;AACbM,QAAAA,KAAK,CAAE,GAAEP,OAAO,CAACJ,IAAK,yBAAjB,CAAL;AACD,OAFD,MAEO,IAAIS,WAAJ,EAAiB;AACtBE,QAAAA,KAAK,CAAE,UAASP,OAAO,CAACM,MAAO,yBAA1B,CAAL;AACD,OAFM,MAEA,CAAC,GAAGP,KAAJ,EAAWC,OAAX;AACR,KAdO;AAeRQ,IAAAA,aAAa,EAAE,CAACT,KAAD,EAAQ;AAAEC,MAAAA;AAAF,KAAR,KACbD,KAAK,CAACL,MAAN,CAAaA,MAAb,CAAoB,CAAC;AAAEe,MAAAA;AAAF,KAAD,KAAYA,EAAE,KAAKT,OAAvC,CAhBM;AAiBRU,IAAAA,YAAY,EAAE,CAACX,KAAD,EAAQ;AAAEC,MAAAA;AAAF,KAAR,KAAyBD,KAAK,CAACL,MAAN,GAAeM;AAjB9C;AAHmB,CAAD,CAA9B;AAwBA,OAAO,MAAM;AAAEF,EAAAA,UAAF;AAAcU,EAAAA,aAAd;AAA6BE,EAAAA;AAA7B,IAA8Cf,UAAU,CAACgB,OAA/D;AACP,eAAehB,UAAU,CAACiB,OAA1B","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nconst initialState = {\n  items: [],\n  filter: '',\n}\n\nconst itemsSlice = createSlice({\n  name: 'items',\n  initialState,\n  reducers: {\n    addContact: (state, { payload }) => {\n      const checkName = state.items\n        .map((contact) => contact.name)\n        .includes(payload.name)\n      const checkNumber = state.items\n        .map((contact) => contact.number)\n        .includes(payload.number)\n\n      if (checkName) {\n        alert(`${payload.name} is already in contacts`)\n      } else if (checkNumber) {\n        alert(`Number ${payload.number} is already in contacts`)\n      } else [...state, payload]\n    },\n    deleteContact: (state, { payload }) =>\n      state.filter.filter(({ id }) => id !== payload),\n    changeFilter: (state, { payload }) => (state.filter = payload),\n  },\n})\n\nexport const { addContact, deleteContact, changeFilter } = itemsSlice.actions\nexport default itemsSlice.reducer\n"]},"metadata":{},"sourceType":"module"}