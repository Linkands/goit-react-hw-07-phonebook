{"ast":null,"code":"import _defineProperty from\"/Users/andres/Documents/GitHub/goit-react-hw-07-phonebook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";var _createReducer,_createReducer2,_createReducer3;import{createReducer}from'@reduxjs/toolkit';import{combineReducers}from'redux';import{changeFilter}from'../actions/contacts-actions';import{fetchContacts,addContact,deleteContact}from'../operations/contacts-operations';var items=createReducer([],(_createReducer={},_defineProperty(_createReducer,fetchContacts.fulfilled,function(_,action){return action.payload;}),_defineProperty(_createReducer,addContact.fulfilled,function(_,action){return action.payload;}),_defineProperty(_createReducer,deleteContact.fulfilled,function(_,action){return action.payload;}),_createReducer));var isLoading=createReducer(false,(_createReducer2={},_defineProperty(_createReducer2,fetchContacts.pending,function(){return true;}),_defineProperty(_createReducer2,fetchContacts.fulfilled,function(){return false;}),_defineProperty(_createReducer2,fetchContacts.rejected,function(){return false;}),_createReducer2));var error=createReducer(null,(_createReducer3={},_defineProperty(_createReducer3,fetchContacts.rejected,function(_,action){return action.payload;}),_defineProperty(_createReducer3,fetchContacts.fulfilled,function(){return null;}),_defineProperty(_createReducer3,addContact.rejected,function(_,action){return action.payload;}),_defineProperty(_createReducer3,addContact.pending,function(){return null;}),_defineProperty(_createReducer3,deleteContact.rejected,function(_,action){return action.payload;}),_defineProperty(_createReducer3,deleteContact.pending,function(){return null;}),_createReducer3));var filter=createReducer('',_defineProperty({},changeFilter,function(_,actions){return actions.payload;}));export default combineReducers({items:items,isLoading:isLoading,filter:filter,error:error});","map":{"version":3,"sources":["/Users/andres/Documents/GitHub/goit-react-hw-07-phonebook/src/redux/reducers/contacts-reducers.js"],"names":["createReducer","combineReducers","changeFilter","fetchContacts","addContact","deleteContact","items","fulfilled","_","action","payload","isLoading","pending","rejected","error","filter","actions"],"mappings":"qOAAA,OAASA,aAAT,KAA8B,kBAA9B,CACA,OAASC,eAAT,KAAgC,OAAhC,CACA,OAASC,YAAT,KAA6B,6BAA7B,CACA,OACEC,aADF,CAEEC,UAFF,CAGEC,aAHF,KAIO,mCAJP,CAMA,GAAMC,CAAAA,KAAK,CAAGN,aAAa,CAAC,EAAD,mDACxBG,aAAa,CAACI,SADU,CACE,SAACC,CAAD,CAAIC,MAAJ,QAAeA,CAAAA,MAAM,CAACC,OAAtB,EADF,iCAExBN,UAAU,CAACG,SAFa,CAED,SAACC,CAAD,CAAIC,MAAJ,QAAeA,CAAAA,MAAM,CAACC,OAAtB,EAFC,iCAGxBL,aAAa,CAACE,SAHU,CAGE,SAACC,CAAD,CAAIC,MAAJ,QAAeA,CAAAA,MAAM,CAACC,OAAtB,EAHF,kBAA3B,CAMA,GAAMC,CAAAA,SAAS,CAAGX,aAAa,CAAC,KAAD,qDAC5BG,aAAa,CAACS,OADc,CACJ,iBAAM,KAAN,EADI,kCAE5BT,aAAa,CAACI,SAFc,CAEF,iBAAM,MAAN,EAFE,kCAG5BJ,aAAa,CAACU,QAHc,CAGH,iBAAM,MAAN,EAHG,mBAA/B,CAMA,GAAMC,CAAAA,KAAK,CAAGd,aAAa,CAAC,IAAD,qDACxBG,aAAa,CAACU,QADU,CACC,SAACL,CAAD,CAAIC,MAAJ,QAAeA,CAAAA,MAAM,CAACC,OAAtB,EADD,kCAExBP,aAAa,CAACI,SAFU,CAEE,iBAAM,KAAN,EAFF,kCAIxBH,UAAU,CAACS,QAJa,CAIF,SAACL,CAAD,CAAIC,MAAJ,QAAeA,CAAAA,MAAM,CAACC,OAAtB,EAJE,kCAKxBN,UAAU,CAACQ,OALa,CAKH,iBAAM,KAAN,EALG,kCAOxBP,aAAa,CAACQ,QAPU,CAOC,SAACL,CAAD,CAAIC,MAAJ,QAAeA,CAAAA,MAAM,CAACC,OAAtB,EAPD,kCAQxBL,aAAa,CAACO,OARU,CAQA,iBAAM,KAAN,EARA,mBAA3B,CAWA,GAAMG,CAAAA,MAAM,CAAGf,aAAa,CAAC,EAAD,oBACzBE,YADyB,CACV,SAACM,CAAD,CAAIQ,OAAJ,QAAgBA,CAAAA,OAAO,CAACN,OAAxB,EADU,EAA5B,CAIA,cAAeT,CAAAA,eAAe,CAAC,CAC7BK,KAAK,CAALA,KAD6B,CAE7BK,SAAS,CAATA,SAF6B,CAG7BI,MAAM,CAANA,MAH6B,CAI7BD,KAAK,CAALA,KAJ6B,CAAD,CAA9B","sourcesContent":["import { createReducer } from '@reduxjs/toolkit'\nimport { combineReducers } from 'redux'\nimport { changeFilter } from '../actions/contacts-actions'\nimport {\n  fetchContacts,\n  addContact,\n  deleteContact,\n} from '../operations/contacts-operations'\n\nconst items = createReducer([], {\n  [fetchContacts.fulfilled]: (_, action) => action.payload,\n  [addContact.fulfilled]: (_, action) => action.payload,\n  [deleteContact.fulfilled]: (_, action) => action.payload,\n})\n\nconst isLoading = createReducer(false, {\n  [fetchContacts.pending]: () => true,\n  [fetchContacts.fulfilled]: () => false,\n  [fetchContacts.rejected]: () => false,\n})\n\nconst error = createReducer(null, {\n  [fetchContacts.rejected]: (_, action) => action.payload,\n  [fetchContacts.fulfilled]: () => null,\n\n  [addContact.rejected]: (_, action) => action.payload,\n  [addContact.pending]: () => null,\n\n  [deleteContact.rejected]: (_, action) => action.payload,\n  [deleteContact.pending]: () => null,\n})\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, actions) => actions.payload,\n})\n\nexport default combineReducers({\n  items,\n  isLoading,\n  filter,\n  error,\n})\n"]},"metadata":{},"sourceType":"module"}