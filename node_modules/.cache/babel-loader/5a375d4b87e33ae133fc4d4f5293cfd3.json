{"ast":null,"code":"var _jsxFileName = \"/Users/andres/Documents/GitHub/goit-react-hw-07-phonebook/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport Phonebook from './components/Phonebook/Phonebook';\nimport Contacts from './components/Contacts/Contacts';\nimport Filter from './components/Filter/Filter';\nimport { v4 as uuidv4 } from 'uuid';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as contactsOperations from './redux/operations/contacts-operations';\nimport * as contactsReducers from './redux/reducers/contacts-reducers';\nimport { addContact, deleteContact } from './redux/slices/items'; // import { changeFilter } from './redux/slices/filter'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconsole.log(contactsReducers);\n\nfunction App() {\n  _s();\n\n  const contactsItems = useSelector(state => state.contacts.items);\n  const filterItems = useSelector(state => state.contacts.filter);\n  const dispatch = useDispatch(); // const mounted = useRef(false)\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState(''); // useEffect(() => {\n  //   if (!mounted.current) {\n  //     mounted.current = true\n  //     return\n  //   }\n  //   localStorage.setItem('contacts', JSON.stringify(contactsItems))\n  // }, [contactsItems])\n\n  useEffect(() => {\n    dispatch(contactsOperations.fetchContacts());\n  }, [dispatch]);\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      case 'filter':\n        dispatch(contactsReducers.changeFilter(value));\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const randomId = uuidv4(); // dispatch(addContact({ id: randomId, name, number }))\n    // localStorage.setItem('contacts', JSON.stringify(contactsItems))\n\n    eraseInputs();\n  };\n\n  const eraseInputs = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const removeContact = id => {// dispatch(deleteContact(id))\n  };\n\n  const visibleContacts = () => {\n    const normalizedFilter = filterItems.toLowerCase();\n    return contactsItems.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Phonebook, {\n      onSubmit: handleSubmit,\n      onChange: handleChange,\n      name: name,\n      number: number\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {\n      filter: filterItems,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Contacts, {\n      contactsData: visibleContacts(),\n      onDeleteContact: removeContact\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"MPCjOIBjCTMHtOAjqjEWlhLo/wE=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/andres/Documents/GitHub/goit-react-hw-07-phonebook/src/App.jsx"],"names":["React","useState","useRef","useEffect","Phonebook","Contacts","Filter","v4","uuidv4","useDispatch","useSelector","contactsOperations","contactsReducers","addContact","deleteContact","console","log","App","contactsItems","state","contacts","items","filterItems","filter","dispatch","name","setName","number","setNumber","fetchContacts","handleChange","e","value","target","changeFilter","handleSubmit","preventDefault","randomId","eraseInputs","removeContact","id","visibleContacts","normalizedFilter","toLowerCase","contact","includes"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react'\nimport Phonebook from './components/Phonebook/Phonebook'\nimport Contacts from './components/Contacts/Contacts'\nimport Filter from './components/Filter/Filter'\nimport { v4 as uuidv4 } from 'uuid'\nimport { useDispatch, useSelector } from 'react-redux'\nimport * as contactsOperations from './redux/operations/contacts-operations'\nimport * as contactsReducers from './redux/reducers/contacts-reducers'\n\nimport { addContact, deleteContact } from './redux/slices/items'\n// import { changeFilter } from './redux/slices/filter'\nconsole.log(contactsReducers)\nfunction App() {\n  const contactsItems = useSelector((state) => state.contacts.items)\n  const filterItems = useSelector((state) => state.contacts.filter)\n  const dispatch = useDispatch()\n\n  // const mounted = useRef(false)\n  const [name, setName] = useState('')\n  const [number, setNumber] = useState('')\n\n  // useEffect(() => {\n  //   if (!mounted.current) {\n  //     mounted.current = true\n  //     return\n  //   }\n  //   localStorage.setItem('contacts', JSON.stringify(contactsItems))\n  // }, [contactsItems])\n\n  useEffect(() => {\n    dispatch(contactsOperations.fetchContacts())\n  }, [dispatch])\n\n  const handleChange = (e) => {\n    const { name, value } = e.target\n    switch (name) {\n      case 'name':\n        setName(value)\n        break\n      case 'number':\n        setNumber(value)\n        break\n      case 'filter':\n        dispatch(contactsReducers.changeFilter(value))\n        break\n\n      default:\n        break\n    }\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    const randomId = uuidv4()\n    // dispatch(addContact({ id: randomId, name, number }))\n    // localStorage.setItem('contacts', JSON.stringify(contactsItems))\n    eraseInputs()\n  }\n\n  const eraseInputs = () => {\n    setName('')\n    setNumber('')\n  }\n\n  const removeContact = (id) => {\n    // dispatch(deleteContact(id))\n  }\n\n  const visibleContacts = () => {\n    const normalizedFilter = filterItems.toLowerCase()\n    return contactsItems.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    )\n  }\n\n  return (\n    <div>\n      <Phonebook\n        onSubmit={handleSubmit}\n        onChange={handleChange}\n        name={name}\n        number={number}\n      ></Phonebook>\n      <Filter filter={filterItems} onChange={handleChange}></Filter>\n      <Contacts\n        contactsData={visibleContacts()}\n        onDeleteContact={removeContact}\n      ></Contacts>\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}