{"ast":null,"code":"var _jsxFileName = \"/Users/andres/Documents/GitHub/goit-react-hw-06-phonebook/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport Phonebook from './components/Phonebook/Phonebook';\nimport Contacts from './components/Contacts/Contacts';\nimport Filter from './components/Filter/Filter';\nimport { v4 as uuidv4 } from 'uuid';\nimport { useDispatch } from 'react-redux';\nimport { addContact, removeContact } from './redux/slices/items';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const mounted = useRef(false);\n  const [contacts, setContacts] = useState([]);\n  const [filter, setFilter] = useState('');\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (!mounted.current) {\n      mounted.current = true;\n      return;\n    }\n\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n  useEffect(() => {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      setContacts(parsedContacts);\n    }\n  }, []);\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      case 'filter':\n        setFilter(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const randomId = uuidv4();\n    const checkName = contacts.map(contact => contact.name).includes(name);\n    const checkNumber = contacts.map(contact => contact.number).includes(number);\n\n    if (checkName) {\n      alert(`${name} is already in contacts`);\n    } else if (checkNumber) {\n      alert(`Number ${number} is already in contacts`);\n    } else {\n      setContacts([...contacts, {\n        id: randomId,\n        name: name,\n        number: number\n      }]);\n    }\n\n    eraseInputs();\n  };\n\n  const eraseInputs = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const removeContact = contactId => {\n    setContacts(prevState => prevState.filter(({\n      id\n    }) => id !== contactId));\n  };\n\n  const visibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Phonebook, {\n      onSubmit: handleSubmit,\n      onChange: handleChange,\n      name: name,\n      number: number\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {\n      filter: filter,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Contacts, {\n      contactsData: visibleContacts(),\n      onDeleteContact: removeContact\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"d9ocYz2aWdV80gnT9yAtGAFEfZo=\", false, function () {\n  return [useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/andres/Documents/GitHub/goit-react-hw-06-phonebook/src/App.jsx"],"names":["React","useState","useEffect","useRef","Phonebook","Contacts","Filter","v4","uuidv4","useDispatch","addContact","removeContact","App","mounted","contacts","setContacts","filter","setFilter","name","setName","number","setNumber","dispatch","current","localStorage","setItem","JSON","stringify","getItem","parsedContacts","parse","handleChange","e","value","target","handleSubmit","preventDefault","randomId","checkName","map","contact","includes","checkNumber","alert","id","eraseInputs","contactId","prevState","visibleContacts","normalizedFilter","toLowerCase"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\nimport Phonebook from './components/Phonebook/Phonebook'\nimport Contacts from './components/Contacts/Contacts'\nimport Filter from './components/Filter/Filter'\nimport { v4 as uuidv4 } from 'uuid'\nimport { useDispatch } from 'react-redux'\nimport { addContact, removeContact } from './redux/slices/items'\n\nfunction App() {\n  const mounted = useRef(false)\n  const [contacts, setContacts] = useState([])\n  const [filter, setFilter] = useState('')\n  const [name, setName] = useState('')\n  const [number, setNumber] = useState('')\n\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    if (!mounted.current) {\n      mounted.current = true\n      return\n    }\n    localStorage.setItem('contacts', JSON.stringify(contacts))\n  }, [contacts])\n\n  useEffect(() => {\n    const contacts = localStorage.getItem('contacts')\n\n    const parsedContacts = JSON.parse(contacts)\n    if (parsedContacts) {\n      setContacts(parsedContacts)\n    }\n  }, [])\n\n  const handleChange = (e) => {\n    const { name, value } = e.target\n    switch (name) {\n      case 'name':\n        setName(value)\n        break\n      case 'number':\n        setNumber(value)\n        break\n      case 'filter':\n        setFilter(value)\n        break\n\n      default:\n        break\n    }\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    const randomId = uuidv4()\n    const checkName = contacts.map((contact) => contact.name).includes(name)\n    const checkNumber = contacts\n      .map((contact) => contact.number)\n      .includes(number)\n\n    if (checkName) {\n      alert(`${name} is already in contacts`)\n    } else if (checkNumber) {\n      alert(`Number ${number} is already in contacts`)\n    } else {\n      setContacts([...contacts, { id: randomId, name: name, number: number }])\n    }\n\n    eraseInputs()\n  }\n\n  const eraseInputs = () => {\n    setName('')\n    setNumber('')\n  }\n\n  const removeContact = (contactId) => {\n    setContacts((prevState) => prevState.filter(({ id }) => id !== contactId))\n  }\n\n  const visibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase()\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    )\n  }\n\n  return (\n    <div>\n      <Phonebook\n        onSubmit={handleSubmit}\n        onChange={handleChange}\n        name={name}\n        number={number}\n      ></Phonebook>\n      <Filter filter={filter} onChange={handleChange}></Filter>\n      <Contacts\n        contactsData={visibleContacts()}\n        onDeleteContact={removeContact}\n      ></Contacts>\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}