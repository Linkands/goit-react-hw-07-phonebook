{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  items: [],\n  filter: ''\n};\nexport const contactsSlice = createSlice({\n  name: 'contacts',\n  initialState,\n  reducers: {\n    addContact: (state, {\n      payload\n    }) => {\n      const checkContact = state.items.find(contact => contact.name.includes(payload.name));\n\n      if (checkContact) {\n        alert(`${payload.name} is already in contacts`);\n        return;\n      }\n\n      return [...state.items, payload];\n    },\n    deleteContact: (state, {\n      payload\n    }) => state.filter.filter(({\n      id\n    }) => id !== payload),\n    changeFilter: (state, {\n      payload\n    }) => state.filter = payload\n  }\n});\nconsole.log(contactsSlice);\nexport const {\n  addContact,\n  deleteContact,\n  changeFilter\n} = contactsSlice.actions;\nexport const contactsReducer = contactsSlice.reducer;","map":{"version":3,"sources":["/Users/andres/Documents/GitHub/goit-react-hw-06-phonebook/src/redux/slices/items.js"],"names":["createSlice","initialState","items","filter","contactsSlice","name","reducers","addContact","state","payload","checkContact","find","contact","includes","alert","deleteContact","id","changeFilter","console","log","actions","contactsReducer","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,MAAM,EAAE;AAFW,CAArB;AAKA,OAAO,MAAMC,aAAa,GAAGJ,WAAW,CAAC;AACvCK,EAAAA,IAAI,EAAE,UADiC;AAEvCJ,EAAAA,YAFuC;AAGvCK,EAAAA,QAAQ,EAAE;AACRC,IAAAA,UAAU,EAAE,CAACC,KAAD,EAAQ;AAAEC,MAAAA;AAAF,KAAR,KAAwB;AAClC,YAAMC,YAAY,GAAGF,KAAK,CAACN,KAAN,CAAYS,IAAZ,CAAkBC,OAAD,IACpCA,OAAO,CAACP,IAAR,CAAaQ,QAAb,CAAsBJ,OAAO,CAACJ,IAA9B,CADmB,CAArB;;AAGA,UAAIK,YAAJ,EAAkB;AAChBI,QAAAA,KAAK,CAAE,GAAEL,OAAO,CAACJ,IAAK,yBAAjB,CAAL;AACA;AACD;;AACD,aAAO,CAAC,GAAGG,KAAK,CAACN,KAAV,EAAiBO,OAAjB,CAAP;AACD,KAVO;AAWRM,IAAAA,aAAa,EAAE,CAACP,KAAD,EAAQ;AAAEC,MAAAA;AAAF,KAAR,KACbD,KAAK,CAACL,MAAN,CAAaA,MAAb,CAAoB,CAAC;AAAEa,MAAAA;AAAF,KAAD,KAAYA,EAAE,KAAKP,OAAvC,CAZM;AAaRQ,IAAAA,YAAY,EAAE,CAACT,KAAD,EAAQ;AAAEC,MAAAA;AAAF,KAAR,KAAyBD,KAAK,CAACL,MAAN,GAAeM;AAb9C;AAH6B,CAAD,CAAjC;AAoBPS,OAAO,CAACC,GAAR,CAAYf,aAAZ;AAEA,OAAO,MAAM;AAAEG,EAAAA,UAAF;AAAcQ,EAAAA,aAAd;AAA6BE,EAAAA;AAA7B,IAA8Cb,aAAa,CAACgB,OAAlE;AACP,OAAO,MAAMC,eAAe,GAAGjB,aAAa,CAACkB,OAAtC","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nconst initialState = {\n  items: [],\n  filter: '',\n}\n\nexport const contactsSlice = createSlice({\n  name: 'contacts',\n  initialState,\n  reducers: {\n    addContact: (state, { payload }) => {\n      const checkContact = state.items.find((contact) =>\n        contact.name.includes(payload.name),\n      )\n      if (checkContact) {\n        alert(`${payload.name} is already in contacts`)\n        return\n      }\n      return [...state.items, payload]\n    },\n    deleteContact: (state, { payload }) =>\n      state.filter.filter(({ id }) => id !== payload),\n    changeFilter: (state, { payload }) => (state.filter = payload),\n  },\n})\n\nconsole.log(contactsSlice)\n\nexport const { addContact, deleteContact, changeFilter } = contactsSlice.actions\nexport const contactsReducer = contactsSlice.reducer\n"]},"metadata":{},"sourceType":"module"}