{"version":3,"sources":["components/Phonebook/Phonebook.styles.jsx","components/Phonebook/Phonebook.jsx","components/Contacts/Contacts.styles.jsx","components/Contacts/Contacts.jsx","components/Filter/Filter.styles.jsx","components/Filter/Filter.jsx","redux/operations/contacts-operations.js","redux/actions/contacts-actions.js","App.jsx","redux/reducers/contacts-reducers.js","redux/store/store.js","index.js"],"names":["Wrapper","styled","div","Header","h2","InputName","p","SubmitButton","button","Phonebook","onSubmit","onChange","name","number","type","pattern","title","required","value","List","ul","Item","li","DeleteButton","Contacts","contactsData","onDeleteContact","map","id","onClick","Filter","filter","autoComplete","getContacts","a","axios","get","contacts","data","defaults","baseURL","fetchContacts","createAsyncThunk","addContact","newContact","post","deleteContact","delete","changeFilter","createAction","App","contactsItems","useSelector","state","items","filterItems","dispatch","useDispatch","useState","setName","setNumber","useEffect","contactsOperations","handleChange","e","target","contactsActions","eraseInputs","preventDefault","randomId","uuidv4","length","normalizedFilter","toLowerCase","contact","includes","visibleContacts","createReducer","fulfilled","_","action","payload","isLoading","pending","rejected","error","actions","combineReducers","store","configureStore","reducer","contactsReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.996cb559.chunk.js","sourcesContent":["import styled from '@emotion/styled'\n\nexport const Wrapper = styled.div`\n  text-align: center;\n`\nexport const Header = styled.h2`\n  color: #4b3b40;\n`\nexport const InputName = styled.p`\n  color: #82735c;\n  margin: 0;\n`\nexport const SubmitButton = styled.button`\n  background-color: #9db17c;\n  color: white;\n  margin-top: 20px;\n  cursor: pointer;\n`\n","import React from 'react'\nimport { Header, SubmitButton, InputName, Wrapper } from './Phonebook.styles'\nimport PropTypes from 'prop-types'\n\nfunction Phonebook({ onSubmit, onChange, name, number }) {\n  return (\n    <Wrapper>\n      <Header>Phonebook</Header>\n      <form onSubmit={onSubmit}>\n        <InputName>Name</InputName>\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={onChange}\n          value={name}\n        />\n        <InputName>Number</InputName>\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          onChange={onChange}\n          value={number}\n        />\n        <br />\n        <SubmitButton type=\"submit\">Add contact</SubmitButton>\n      </form>\n    </Wrapper>\n  )\n}\n\nPhonebook.propTypes = {\n  name: PropTypes.string,\n  onChange: PropTypes.func,\n  onSubmit: PropTypes.func,\n  number: PropTypes.node,\n}\n\nexport default Phonebook\n","import styled from '@emotion/styled'\n\nexport const Wrapper = styled.div`\n  text-align: center;\n`\nexport const List = styled.ul`\n  color: #4b3b40;\n`\nexport const Item = styled.li`\n  color: #82735c;\n  list-style: none;\n`\nexport const DeleteButton = styled.button`\n  background-color: #9db17c;\n  color: white;\n  margin-left: 20px;\n  margin-top: 10px;\n  cursor: pointer;\n`\nexport const Header = styled.h2`\n  color: #4b3b40;\n`\n","import React from 'react'\nimport { Wrapper, List, Item, DeleteButton, Header } from './Contacts.styles'\nimport PropTypes from 'prop-types'\n\nfunction Contacts({ contactsData, onDeleteContact }) {\n  return (\n    <Wrapper>\n      <Header>Contacts</Header>\n      <List>\n        {contactsData.map(({ id, name, number }) => (\n          <Item key={id}>\n            {name}: {number}\n            <DeleteButton type=\"button\" onClick={() => onDeleteContact(id)}>\n              Delete contact\n            </DeleteButton>\n          </Item>\n        ))}\n      </List>\n    </Wrapper>\n  )\n}\n\nContacts.propTypes = {\n  id: PropTypes.node,\n  name: PropTypes.string,\n  number: PropTypes.number,\n}\n\nexport default Contacts\n","import styled from '@emotion/styled'\n\nexport const Wrapper = styled.div`\n  text-align: center;\n`\nexport const Header = styled.p`\n  color: #4b3b40;\n  margin-top: 10px;\n  margin-bottom: 0px;\n`\n","import React from 'react'\nimport { Header, Wrapper } from './Filter.styles'\nimport PropTypes from 'prop-types'\n\nfunction Filter({ filter, onChange }) {\n  return (\n    <Wrapper>\n      <Header>Find contacts by name</Header>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        onChange={onChange}\n        value={filter}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n        autoComplete=\"off\"\n      />\n    </Wrapper>\n  )\n}\n\nFilter.propTypes = {\n  filter: PropTypes.string,\n  onChange: PropTypes.func,\n}\n\nexport default Filter\n","import axios from 'axios'\nimport { createAsyncThunk } from '@reduxjs/toolkit'\n\naxios.defaults.baseURL = 'http://localhost:3000'\n\nasync function getContacts() {\n  const contacts = await axios.get(`/contacts`)\n  return contacts.data\n}\n\nexport const fetchContacts = createAsyncThunk(\n  'contacts/fetchContacts',\n  async () => {\n    const contacts = await getContacts()\n    return contacts\n  },\n)\n\nexport const addContact = createAsyncThunk(\n  'contacts/addContact',\n  async (newContact) => {\n    await axios.post(`/contacts`, newContact)\n    return await getContacts()\n  },\n)\n\nexport const deleteContact = createAsyncThunk(\n  'contacts/deleteContact',\n  async (id) => {\n    await axios.delete(`/contacts/${id}`)\n    return await getContacts()\n  },\n)\n","import { createAction } from '@reduxjs/toolkit'\n\nexport const changeFilter = createAction('contacts/changeFilter')\n","import React, { useState, useEffect } from 'react'\nimport Phonebook from './components/Phonebook/Phonebook'\nimport Contacts from './components/Contacts/Contacts'\nimport Filter from './components/Filter/Filter'\nimport { v4 as uuidv4 } from 'uuid'\nimport { useDispatch, useSelector } from 'react-redux'\nimport * as contactsOperations from './redux/operations/contacts-operations'\nimport * as contactsActions from './redux/actions/contacts-actions'\n\nfunction App() {\n  const contactsItems = useSelector((state) => state.contacts.items)\n  const filterItems = useSelector((state) => state.contacts.filter)\n  const dispatch = useDispatch()\n\n  const [name, setName] = useState('')\n  const [number, setNumber] = useState('')\n\n  useEffect(() => {\n    dispatch(contactsOperations.fetchContacts())\n  }, [dispatch])\n\n  const handleChange = (e) => {\n    const { name, value } = e.target\n    switch (name) {\n      case 'name':\n        setName(value)\n        break\n      case 'number':\n        setNumber(value)\n        break\n      case 'filter':\n        dispatch(contactsActions.changeFilter(value))\n        break\n\n      default:\n        break\n    }\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    const randomId = uuidv4()\n    dispatch(contactsOperations.addContact({ id: randomId, name, number }))\n    eraseInputs()\n  }\n\n  const eraseInputs = () => {\n    setName('')\n    setNumber('')\n  }\n\n  const removeContact = (id) => {\n    dispatch(contactsOperations.deleteContact(id))\n  }\n\n  const visibleContacts = () => {\n    const normalizedFilter = filterItems.toLowerCase()\n    return contactsItems.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    )\n  }\n\n  return (\n    <div>\n      <Phonebook\n        onSubmit={handleSubmit}\n        onChange={handleChange}\n        name={name}\n        number={number}\n      ></Phonebook>\n      {contactsItems.length > 0 && (\n        <>\n          <Filter filter={filterItems} onChange={handleChange}></Filter>\n          <Contacts\n            contactsData={visibleContacts()}\n            onDeleteContact={removeContact}\n          ></Contacts>\n        </>\n      )}\n    </div>\n  )\n}\n\nexport default App\n","import { createReducer } from '@reduxjs/toolkit'\nimport { combineReducers } from 'redux'\nimport { changeFilter } from '../actions/contacts-actions'\nimport {\n  fetchContacts,\n  addContact,\n  deleteContact,\n} from '../operations/contacts-operations'\n\nconst items = createReducer([], {\n  [fetchContacts.fulfilled]: (_, action) => action.payload,\n  [addContact.fulfilled]: (_, action) => action.payload,\n  [deleteContact.fulfilled]: (_, action) => action.payload,\n})\n\nconst isLoading = createReducer(false, {\n  [fetchContacts.pending]: () => true,\n  [fetchContacts.fulfilled]: () => false,\n  [fetchContacts.rejected]: () => false,\n})\n\nconst error = createReducer(null, {\n  [fetchContacts.rejected]: (_, action) => action.payload,\n  [fetchContacts.fulfilled]: () => null,\n\n  [addContact.rejected]: (_, action) => action.payload,\n  [addContact.pending]: () => null,\n\n  [deleteContact.rejected]: (_, action) => action.payload,\n  [deleteContact.pending]: () => null,\n})\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, actions) => actions.payload,\n})\n\nexport default combineReducers({\n  items,\n  isLoading,\n  filter,\n  error,\n})\n","import { configureStore } from '@reduxjs/toolkit'\nimport contactsReducer from '../reducers/contacts-reducers'\n\nexport const store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  devTools: process.env.NODE_ENV !== 'production',\n})\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App.jsx'\nimport { store } from './redux/store/store'\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}